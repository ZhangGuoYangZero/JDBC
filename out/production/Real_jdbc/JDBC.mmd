Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# jdbc

## JDBC<br/>是一组抽象的数据库操作集合

### 独立于数据库的数据库管理系统

### JDBC驱动<br/>真正实现了JDBC的内部具体操作，系统就是调用的这个

### JDBC的实现是厂商做的<br/>而普通人就只是调用接口

#### connection

#### statement

#### resultSet

#### Driver<br/>驱动

#### 额外注意，由于导入了JAR包进入了项目<br/>所以当你取寻找对应的包，就可以寻找到自己和导入的包，感觉写的很迷糊<br/>比如 com\.zgy\.xxx 这是由于自己的包就是这样

### 链接方法

#### 方法一

##### 这种方法是直接NEW 第三方的包

###### Driver driver = new com\.mysql\.cj\.jdbc\.Driver\(\);<br/>        System\.out\.print\(driver\);

#### 方法二

##### Driver通过加载也是就是反射的放射的方式实例化对象进入内部

###### Class DriverClass = Class\.forName\("com\.mysql\.cj\.jdbc\.Driver"\);<br/>     Driver driver = \(Driver\) DriverClass\.getDeclaredConstructor\(\)\.newInstance\(\);<br/>     System\.out\.print\(driver\);

#### 通过Driver对象获取的connnection方法获取connect对象<br/>一个connectio对象等于一个外模式也就是查询控制台

##### connect\(url,Properties info\)<br/>user password

#### 方法三，通过DriverManager去获取和管理<br/>推荐方法

##### DriverManager的构造器被私有了，只有通过Regesity方法<br/>Register方法里面加载了驱动，这个驱动已经是实例化被加载到里面了<br/>DriverManager就是进行了管理

######  DriverManager\.registerDriver\(\(Driver\) Class\.forName\("com\.mysql\.cj\.jdbc\.Driver"\)\.getDeclaredConstructor\(\)\.newInstance\(\)\);

##### 由于已经注册是驱动，所以可以直接通过管理器链接<br/>没有通过properties设置，是由于底层调用了一个properties

######  Connection conn = DriverManager\.getConnection\("jdbc:mysql://localhost:3306/jdbc","zgy","123456"\);<br/>        System\.out\.println\(conn\);

#### 方法四 ，由于mysql驱动在自动加载的时候，就帮忙做了注册<br/>所以直接用driverManager管理就好<br/>在加载的静态代码块自动给NEW一个Driver类对象，而这个Driver类对象就是MYSQL<br/>只是他的Driver的构造函数是空的

#####  Class\.forName\("com\.mysql\.cj\.jdbc\.Driver"\);<br/>        DriverManager\.getConnection\("jdbc:mysql://localhost:3306/jdbc","zgy","123456"\);

#### 方法五：全部通过Properties文件完成，需要的参数配置<br/>推荐

##### 使用 主类\.class\.getResourceAsStream（“url”） inputstream

###### 默认识别src下的

##### 通过之前NEW的properties的load方法加载

######  public void getConnection5\(\) throws IOException \{<br/>        Properties properties = new Properties\(\);<br/>        InputStream inputStreamProperty = ClassLoader\.getSystemClassLoader\(\)\.getResourceAsStream\("conf\.properties"\);<br/>        properties\.load\(inputStreamProperty\);

###### ClassLoader类加载器类  去 通过获取系统的类加载器

#### 路径 第三方\-类加载\-数据管理对象\-\-类自动加载\-properties自动配置

### 一个connection就是一个SOCKET链接<br/>无论他是链接远端还是本机的

### crud
